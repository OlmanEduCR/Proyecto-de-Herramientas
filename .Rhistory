library(dplyr)
datos <- read.csv2("data.csv", sep = ";", header = TRUE, stringsAsFactors = FALSE)
head(datos, 5)
#str(datos)
variables_cuantitativas <- names(select(datos, is.numeric)
#str(datos)
variables_cuantitativas <- names(select_if(datos, is.numeric)
#str(datos)
variables_cuantitativas <- names(select(datos, is.numeric))
#str(datos)
variables_cuantitativas <- names(select(datos, where(is.numeric)))
v
variables_cuantitativas
library(ggplot2)
#str(datos)
variables_cuantitativas <- names(select(datos, where(is.numeric)))
for (var in variables_cuantitativas){
h <- ggplot(datos, aes_string(x=var))+
geom_histogram(fill = "#66CDAA", color = "#79CDCD", bins = 30) +
labs(title = paste("Histograma de", var), x = var, y = "Frecuencia") +
theme_minimal()
print(h)
}
}
#str(datos)
variables_cuantitativas <- names(select(datos, where(is.numeric)))
for (var in variables_cuantitativas){
h <- ggplot(datos, aes_string(x=var))+
geom_histogram(fill = "#66CDAA", color = "#79CDCD", bins = 30) +
labs(title = paste("Histograma de", var), x = var, y = "Frecuencia") +
theme_minimal()
print(h)
}
library(dplyr)
library(ggplot2)
datos <- read.csv2("data.csv", sep = ";", header = TRUE, stringsAsFactors = FALSE)
head(datos, 5)
#str(datos)
variables_cuantitativas <- names(select(datos, where(is.numeric)))
for (var in variables_cuantitativas){
h <- ggplot(datos, aes_string(x=var))+
geom_histogram(fill = "#66CDAA", color = "#79CDCD", bins = 30) +
labs(title = paste("Histograma de", var), x = var, y = "Frecuencia") +
theme_minimal()
print(h)
}
#str(datos)
variables_cuantitativas <- names(select(datos, where(is.numeric)))
for (var in variables_cuantitativas){
h <- ggplot(datos, aes_string(x=var))+
geom_histogram(fill = "#66CDAA", color = "red", bins = 30) +
labs(title = paste("Histograma de", var), x = var, y = "Frecuencia") +
theme_minimal()
print(h)
}
library(dplyr)
library(ggplot2)
datos <- read.csv2("data.csv", sep = ";", header = TRUE, stringsAsFactors = FALSE)
head(datos, 5)
View(datos)
variables_cuantitativas <- names(select(datos, where(is.numeric)))
resumen_5_numeros <- sapply(vars_cuantitativas, fivenum)
variables_cuantitativas <- names(select(datos, where(is.numeric)))
resumen_5_numeros <- sapply(variables_cuantitativas, fivenum)
library(dplyr)
# Supongamos que 'datos' es el data frame con las variables
# Seleccionar solo variables cuantitativas (numéricas)
vars_cuantitativas <- select_if(datos, is.numeric)
# Calcular resumen de 5 números para cada variable
resumen_5_numeros <- sapply(vars_cuantitativas, fivenum)
# Transponer la matriz para mejor lectura (variables en filas)
resumen_5_numeros <- t(resumen_5_numeros)
# Asignar nombres claros a las columnas
colnames(resumen_5_numeros) <- c("Min", "Q1", "Mediana", "Q3", "Max")
# Mostrar el resumen
print(resumen_5_numeros)
library(dplyr)
# Supongamos que 'datos' es el data frame con las variables
# Seleccionar solo variables cuantitativas (numéricas)
variables_cuantitativas <- select_if(datos, is.numeric)
# Calcular resumen de 5 números para cada variable
resumen_5_numeros <- sapply(variables_cuantitativas, fivenum)
# Transponer la matriz para mejor lectura (variables en filas)
resumen_5_numeros <- t(resumen_5_numeros)
# Asignar nombres claros a las columnas
colnames(resumen_5_numeros) <- c("Min", "Q1", "Mediana", "Q3", "Max")
# Mostrar el resumen
print(resumen_5_numeros)
library(dplyr)
library(ggplot2)
datos <- read.csv2("data.csv", sep = ";", header = TRUE, stringsAsFactors = FALSE)
head(datos, 5)
library(dplyr)
# Supongamos que 'datos' es el data frame con las variables
# Seleccionar solo variables cuantitativas (numéricas)
variables_cuantitativas <- select_if(datos, is.numeric)
# Calcular resumen de 5 números para cada variable
resumen_5_numeros <- sapply(variables_cuantitativas, fivenum)
# Transponer la matriz para mejor lectura (variables en filas)
resumen_5_numeros <- t(resumen_5_numeros)
# Asignar nombres claros a las columnas
colnames(resumen_5_numeros) <- c("Min", "Q1", "Mediana", "Q3", "Max")
# Mostrar el resumen
print(resumen_5_numeros)
#str(datos)
for (var in variables_cuantitativas){
h <- ggplot(datos, aes_string(x=var))+
geom_histogram(fill = "#66CDAA", color = "#79CDCD", bins = 30) +
labs(title = paste("Histograma de", var), x = var, y = "Frecuencia") +
theme_minimal()
print(h)
}
resumen_5_numeros
library(dplyr)
# Se seleciona las variables cuantitaticas
variables_cuantitativas <- select_if(datos, is.numeric)
# Calcular resumen de 5 números para cada variable
#'Vamos a usar sapply para aplicar la funcion fivenum a la base
#'el firenum es una funcion que nos ayuda a calcular el minimo y maximo, los Q1 y Q3, ademas de eso la mediana
resumen_5_numeros <- sapply(variables_cuantitativas, fivenum)
resumen_5_numeros
library(dplyr)
# Se seleciona las variables cuantitaticas
variables_cuantitativas <- select_if(datos, is.numeric)
# Calcular resumen de 5 números para cada variable
#'Vamos a usar sapply para aplicar la funcion fivenum a la base
#'el firenum es una funcion que nos ayuda a calcular el minimo y maximo, los Q1 y Q3, ademas de eso la mediana
resumen_5_numeros <- sapply(variables_cuantitativas, fivenum)
#'Para facilitar la lectura vamos a ponerle nosmbres claros a las columnas
colnames(resumen_5_numeros) <- c("Minimo","Q1","Mediana","Q3","Máximo")
library(dplyr)
# Se seleciona las variables cuantitaticas
variables_cuantitativas <- select_if(datos, is.numeric)
# Calcular resumen de 5 números para cada variable
#'Vamos a usar sapply para aplicar la funcion fivenum a la base
#'el firenum es una funcion que nos ayuda a calcular el minimo y maximo, los Q1 y Q3, ademas de eso la mediana
resumen_5_numeros <- sapply(variables_cuantitativas, fivenum)
resumen_5_numeros <- t(resumen_5_numeros)
#'Para facilitar la lectura vamos a ponerle nosmbres claros a las columnas
colnames(resumen_5_numeros) <- c("Minimo","Q1","Mediana","Q3","Máximo")
print(resumen_5_numeros)
library(dplyr)
# Se seleciona las variables cuantitaticas
variables_cuantitativas <- select_if(datos, is.numeric)
# Calcular resumen de 5 números para cada variable
#'Vamos a usar sapply para aplicar la funcion fivenum a la base
#'el firenum es una funcion que nos ayuda a calcular el minimo y maximo, los Q1 y Q3, ademas de eso la mediana
resumen_5_numeros <- sapply(variables_cuantitativas, fivenum)
#para no tener problema trasponemos a resumen_5_numeros
resumen_5_numeros <- t(resumen_5_numeros)
#'Para facilitar la lectura vamos a ponerle nosmbres claros a las columnas
colnames(resumen_5_numeros) <- c("Minimo","Q1","Mediana","Q3","Máximo")
print(resumen_5_numeros)
library(dplyr)
library(ggplot2)
datos <- read.csv2("data.csv", sep = ";", header = TRUE, stringsAsFactors = FALSE)
head(datos, 5)
datos
library(dplyr)
library(ggplot2)
datos <- read.csv2("data.csv", sep = ";", header = TRUE, stringsAsFactors = FALSE)
head(datos, 5)
datos
library(dplyr)
# Se seleciona las variables cuantitaticas
variables_cuantitativas <- select_if(datos, is.numeric)
# Calcular resumen de 5 números para cada variable
#'Vamos a usar sapply para aplicar la funcion fivenum a la base
#'el firenum es una funcion que nos ayuda a calcular el minimo y maximo, los Q1 y Q3, ademas de eso la mediana
resumen_5_numeros <- sapply(variables_cuantitativas, fivenum)
#para no tener problema trasponemos a resumen_5_numeros
resumen_5_numeros <- t(resumen_5_numeros)
#'Para facilitar la lectura vamos a ponerle nosmbres claros a las columnas
colnames(resumen_5_numeros) <- c("Minimo","Q1","Mediana","Q3","Máximo")
print(resumen_5_numeros)
#str(datos)
variables_cuantitativas <- names(select(datos, where(is.numeric)))
for (var in variables_cuantitativas){
h <- ggplot(datos, aes_string(x=var))+
geom_histogram(fill = "#66CDAA", color = "#79CDCD", bins = 30) +
labs(title = paste("Histograma de", var), x = var, y = "Frecuencia") +
theme_minimal()
print(h)
}
grafico_internacional_genero <- function(df, genero, internacional, pais) {
df_plot <- df %>%
mutate(
genero = factor({{genero}}, levels = c(1, 0), labels = c("Hombres", "Mujeres")),
tipo = factor({{internacional}}, levels = c(0, 1), labels = c("Nacional", "Internacional"))
) %>%
group_by(genero, tipo) %>%
summarise(Frecuencia = n(), .groups = "drop")
ggplot(df_plot, aes(x = tipo, y = Frecuencia, fill = genero)) +
geom_col(position = "dodge", width = 0.7) +
geom_text(aes(label = Frecuencia),
position = position_dodge(width = 0.7),
vjust = -0.3, size = 3.5) +
scale_fill_manual(values = c("steelblue", "darkorange")) +
labs(
title = "Distribución de Internacionales y Nacionales por Género",
x = "Lugar de Procedencia",
y = "Frecuencia",
fill = "Género"
) +
theme_minimal(base_size = 12) +
theme(
legend.position = "bottom",
plot.title = element_text(face = "bold"),
axis.text.x = element_text(angle = 0, hjust = 0.5)
)
}
grafico_internacional_genero(datos, datos$Gender, datos$International, datos$Nacionality)
View(datos)
